"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"category","label":"Introduction","collapsed":false,"items":[{"type":"link","label":"Getting Started","href":"/liquid/introduction/getting-started","docId":"introduction/getting-started","unlisted":false},{"type":"link","label":"Loading Templates","href":"/liquid/introduction/loading-templates","docId":"introduction/loading-templates","unlisted":false},{"type":"link","label":"Render Context","href":"/liquid/introduction/render-context","docId":"introduction/render-context","unlisted":false},{"type":"link","label":"Objects and Drops","href":"/liquid/introduction/objects-and-drops","docId":"introduction/objects-and-drops","unlisted":false},{"type":"link","label":"Strictness","href":"/liquid/introduction/strictness","docId":"introduction/strictness","unlisted":false},{"type":"link","label":"Comments","href":"/liquid/introduction/comments","docId":"introduction/comments","unlisted":false},{"type":"link","label":"HTML Auto-Escape","href":"/liquid/introduction/auto-escape","docId":"introduction/auto-escape","unlisted":false},{"type":"link","label":"Async Support","href":"/liquid/introduction/async-support","docId":"introduction/async-support","unlisted":false},{"type":"link","label":"Caching","href":"/liquid/introduction/caching","docId":"introduction/caching","unlisted":false}],"collapsible":true},{"type":"category","label":"Guides","collapsed":false,"items":[{"type":"link","label":"Custom Filters","href":"/liquid/guides/custom-filters","docId":"guides/custom-filters","unlisted":false},{"type":"link","label":"Custom Tags","href":"/liquid/guides/custom-tags","docId":"guides/custom-tags","unlisted":false},{"type":"link","label":"Custom Loaders","href":"/liquid/guides/custom-loaders","docId":"guides/custom-loaders","unlisted":false},{"type":"link","label":"Security","href":"/liquid/guides/security","docId":"guides/security","unlisted":false},{"type":"link","label":"Static Template Analysis","href":"/liquid/guides/static-template-analysis","docId":"guides/static-template-analysis","unlisted":false},{"type":"link","label":"Contextual Template Analysis","href":"/liquid/guides/contextual-template-analysis","docId":"guides/contextual-template-analysis","unlisted":false},{"type":"link","label":"Tag Analysis","href":"/liquid/guides/tag-analysis","docId":"guides/tag-analysis","unlisted":false},{"type":"link","label":"Undefined Variables","href":"/liquid/guides/undefined-variables","docId":"guides/undefined-variables","unlisted":false},{"type":"link","label":"Whitespace Suppression","href":"/liquid/guides/whitespace-suppression","docId":"guides/whitespace-suppression","unlisted":false},{"type":"link","label":"Resource Limits","href":"/liquid/guides/resource-limits","docId":"guides/resource-limits","unlisted":false},{"type":"link","label":"Django Liquid","href":"/liquid/guides/django-liquid","docId":"guides/django-liquid","unlisted":false},{"type":"link","label":"Flask Liquid","href":"/liquid/guides/flask-liquid","docId":"guides/flask-liquid","unlisted":false}],"collapsible":true}],"languageSidebar":[{"type":"category","label":"Language","collapsed":false,"items":[{"type":"link","label":"Introduction to Liquid","href":"/liquid/language/introduction","docId":"language/introduction","unlisted":false},{"type":"link","label":"Liquid Filters","href":"/liquid/language/filters","docId":"language/filters","unlisted":false},{"type":"link","label":"Liquid Tags","href":"/liquid/language/tags","docId":"language/tags","unlisted":false}],"collapsible":true},{"type":"category","label":"Extra","collapsed":false,"items":[{"type":"link","label":"Extra Tags and Filters","href":"/liquid/extra/introduction","docId":"extra/introduction","unlisted":false},{"type":"link","label":"Extra Filters","href":"/liquid/extra/filters","docId":"extra/filters","unlisted":false},{"type":"link","label":"Extra Tags","href":"/liquid/extra/tags","docId":"extra/tags","unlisted":false}],"collapsible":true},{"type":"category","label":"Babel","collapsed":false,"items":[{"type":"link","label":"Python Liquid Babel","href":"/liquid/babel/introduction","docId":"babel/introduction","unlisted":false},{"type":"link","label":"Babel Filters","href":"/liquid/babel/filters","docId":"babel/filters","unlisted":false},{"type":"link","label":"Babel Tags","href":"/liquid/babel/tags","docId":"babel/tags","unlisted":false}],"collapsible":true},{"type":"category","label":"JSONPath","collapsed":false,"items":[{"type":"link","label":"Python Liquid JSONPath","href":"/liquid/jsonpath/introduction","docId":"jsonpath/introduction","unlisted":false},{"type":"link","label":"JSONPath Filters","href":"/liquid/jsonpath/filters","docId":"jsonpath/filters","unlisted":false},{"type":"link","label":"JSONPath Tags","href":"/liquid/jsonpath/tags","docId":"jsonpath/tags","unlisted":false}],"collapsible":true}],"apiSidebar":[{"type":"category","label":"API","collapsed":false,"items":[{"type":"link","label":"liquid.Template","href":"/liquid/api/Template","docId":"api/Template","unlisted":false},{"type":"link","label":"liquid.Environment","href":"/liquid/api/Environment","docId":"api/Environment","unlisted":false},{"type":"link","label":"liquid.BoundTemplate","href":"/liquid/api/BoundTemplate","docId":"api/BoundTemplate","unlisted":false},{"type":"link","label":"liquid.loaders.CachingFileSystemLoader","href":"/liquid/api/cachingfilesystemloader","docId":"api/cachingfilesystemloader","unlisted":false},{"type":"link","label":"liquid.future.Environment","href":"/liquid/api/future-environment","docId":"api/future-environment","unlisted":false},{"type":"link","label":"liquid.loaders.FileSystemLoader","href":"/liquid/api/filesystemloader","docId":"api/filesystemloader","unlisted":false},{"type":"link","label":"liquid.loaders.FileExtensionLoader","href":"/liquid/api/fileextensionloader","docId":"api/fileextensionloader","unlisted":false},{"type":"link","label":"liquid.loaders.ChoiceLoader","href":"/liquid/api/choiceloader","docId":"api/choiceloader","unlisted":false},{"type":"link","label":"liquid.loaders.CachingChoiceLoader","href":"/liquid/api/cachingchoiceloader","docId":"api/cachingchoiceloader","unlisted":false},{"type":"link","label":"liquid.loaders.DictLoader","href":"/liquid/api/dictloader","docId":"api/dictloader","unlisted":false},{"type":"link","label":"liquid.loaders.PackageLoader","href":"/liquid/api/packageloader","docId":"api/packageloader","unlisted":false},{"type":"link","label":"liquid.exceptions","href":"/liquid/api/exceptions","docId":"api/exceptions","unlisted":false},{"type":"link","label":"liquid.Context","href":"/liquid/api/context","docId":"api/context","unlisted":false},{"type":"link","label":"liquid.tag.Tag","href":"/liquid/api/Tag","docId":"api/Tag","unlisted":false},{"type":"link","label":"liquid.ast.Node","href":"/liquid/api/node","docId":"api/node","unlisted":false},{"type":"link","label":"liquid.template.TemplateAnalysis","href":"/liquid/api/template-analysis","docId":"api/template-analysis","unlisted":false},{"type":"link","label":"liquid.template.ContextualTemplateAnalysis","href":"/liquid/api/contextual-template-analysis","docId":"api/contextual-template-analysis","unlisted":false},{"type":"link","label":"liquid.TagAnalysis","href":"/liquid/api/tag-analysis","docId":"api/tag-analysis","unlisted":false}],"collapsible":true}]},"docs":{"api/BoundTemplate":{"id":"api/BoundTemplate","title":"liquid.BoundTemplate","description":"A liquid template that has been parsed and is bound to a liquid.Environment.","sidebar":"apiSidebar"},"api/cachingchoiceloader":{"id":"api/cachingchoiceloader","title":"liquid.loaders.CachingChoiceLoader","description":"A template loader inherits from ChoiceLoader and caches parsed templates in memory.","sidebar":"apiSidebar"},"api/cachingfilesystemloader":{"id":"api/cachingfilesystemloader","title":"liquid.loaders.CachingFileSystemLoader","description":"A loader that inherits from FileExtensionLoader and caches parsed templates in an LRU cache.","sidebar":"apiSidebar"},"api/choiceloader":{"id":"api/choiceloader","title":"liquid.loaders.ChoiceLoader","description":"A template loader that will try each of a list of loaders until a template is found.","sidebar":"apiSidebar"},"api/context":{"id":"api/context","title":"liquid.Context","description":"A render context, containing namespaces for template variables and a references to the bound environment.","sidebar":"apiSidebar"},"api/contextual-template-analysis":{"id":"api/contextual-template-analysis","title":"liquid.template.ContextualTemplateAnalysis","description":"The result of analyzing a Liquid template using BoundTemplate.analyzewithcontext().","sidebar":"apiSidebar"},"api/dictloader":{"id":"api/dictloader","title":"liquid.loaders.DictLoader","description":"A loader that loads templates from a dictionary mapping template names to template source strings.","sidebar":"apiSidebar"},"api/Environment":{"id":"api/Environment","title":"liquid.Environment","description":"Shared configuration from which templates can be loaded and parsed. An environment is where you might register custom tags and filters, or store global render context variables that should be included with every template.","sidebar":"apiSidebar"},"api/exceptions":{"id":"api/exceptions","title":"liquid.exceptions","description":"liquid.exceptions.Error","sidebar":"apiSidebar"},"api/fileextensionloader":{"id":"api/fileextensionloader","title":"liquid.loaders.FileExtensionLoader","description":"A loader that inherits from FileSystemLoader and adds a file name extension to any template_name that does not have one.","sidebar":"apiSidebar"},"api/filesystemloader":{"id":"api/filesystemloader","title":"liquid.loaders.FileSystemLoader","description":"A loader that loads templates from one or more directories on a file system.","sidebar":"apiSidebar"},"api/future-environment":{"id":"api/future-environment","title":"liquid.future.Environment","description":"_New in version 1.7.0_","sidebar":"apiSidebar"},"api/node":{"id":"api/node","title":"liquid.ast.Node","description":"Abstract base class for all nodes in a parse tree.","sidebar":"apiSidebar"},"api/packageloader":{"id":"api/packageloader","title":"liquid.loaders.PackageLoader","description":"A template loader that reads templates from Python packages.","sidebar":"apiSidebar"},"api/Tag":{"id":"api/Tag","title":"liquid.tag.Tag","description":"Base class for all built-in and custom template tags.","sidebar":"apiSidebar"},"api/tag-analysis":{"id":"api/tag-analysis","title":"liquid.TagAnalysis","description":"_New in version 1.7.0_","sidebar":"apiSidebar"},"api/Template":{"id":"api/Template","title":"liquid.Template","description":"A factory function. Create a liquid.template.BoundTemplate, automatically creating a liquid.Environment to bind it to.","sidebar":"apiSidebar"},"api/template-analysis":{"id":"api/template-analysis","title":"liquid.template.TemplateAnalysis","description":"The result of analyzing a Liquid template using BoundTemplate.analyze().","sidebar":"apiSidebar"},"babel/filters":{"id":"babel/filters","title":"Babel Filters","description":"Optional filters provided by the liquid-babel package.","sidebar":"languageSidebar"},"babel/introduction":{"id":"babel/introduction","title":"Python Liquid Babel","description":"Liquid Babel is a collection of optional filters and tags that facilitate the internationalization (i18n) and localization (i10n) of Liquid templates.","sidebar":"languageSidebar"},"babel/tags":{"id":"babel/tags","title":"Babel Tags","description":"Optional tags provided by the liquid-babel package.","sidebar":"languageSidebar"},"extra/filters":{"id":"extra/filters","title":"Extra Filters","description":"_New in version 1.5.0_","sidebar":"languageSidebar"},"extra/introduction":{"id":"extra/introduction","title":"Extra Tags and Filters","description":"_New in version 1.5.0_","sidebar":"languageSidebar"},"extra/tags":{"id":"extra/tags","title":"Extra Tags","description":"This page documents extra tags that are not included in standard Liquid. See the tag reference for details of all standard tags. Each tag described here must be registered with a liquid.Environment to make it available to templates rendered from that environment.","sidebar":"languageSidebar"},"guides/contextual-template-analysis":{"id":"guides/contextual-template-analysis","title":"Contextual Template Analysis","description":"_New in version 1.3.0_","sidebar":"docsSidebar"},"guides/custom-filters":{"id":"guides/custom-filters","title":"Custom Filters","description":"In Python Liquid, a filters are implemented as a Python functions or callable classes that accept at least one argument, the left hand side of a filtered expression. The callable\'s return value will be output, assigned or piped to more filters.","sidebar":"docsSidebar"},"guides/custom-loaders":{"id":"guides/custom-loaders","title":"Custom Loaders","description":"Loaders are responsible for finding a template\'s source text given a name or identifier. Built-in loaders include a FileSystemLoader, a FileExtensionLoader, a ChoiceLoader and a DictLoader. You might want to write a custom loader to load templates from a database or add extra meta data to the template context, for example.","sidebar":"docsSidebar"},"guides/custom-tags":{"id":"guides/custom-tags","title":"Custom Tags","description":"A Liquid tag is defined by a pair of Python classes. One a subclass of liquid.tag.Tag and one a subclass of liquid.ast.Node. The required parse() method of a Tag is responsible for parsing a tag\'s expression and returning a Node, which will be added to a template\'s parse tree.","sidebar":"docsSidebar"},"guides/django-liquid":{"id":"guides/django-liquid","title":"Django Liquid","description":"A Django template backend for Python Liquid.","sidebar":"docsSidebar"},"guides/flask-liquid":{"id":"guides/flask-liquid","title":"Flask Liquid","description":"A Flask extension for Python Liquid.","sidebar":"docsSidebar"},"guides/resource-limits":{"id":"guides/resource-limits","title":"Resource Limits","description":"_New in version 1.4.0_","sidebar":"docsSidebar"},"guides/security":{"id":"guides/security","title":"Security","description":"Designed for situations where template authors are untrusted and, perhaps, not software developers, Liquid has security goals that are distinct from many other template languages. Most notably:","sidebar":"docsSidebar"},"guides/static-template-analysis":{"id":"guides/static-template-analysis","title":"Static Template Analysis","description":"_New in version 1.2.0_","sidebar":"docsSidebar"},"guides/tag-analysis":{"id":"guides/tag-analysis","title":"Tag Analysis","description":"_New in version 1.7.0_","sidebar":"docsSidebar"},"guides/undefined-variables":{"id":"guides/undefined-variables","title":"Undefined Variables","description":"When rendering a Liquid template, if a variable name can not be resolved, an instance of liquid.Undefined is used instead. We can customize template rendering behavior by implementing some of Python\'s \\"magic\\" methods on a subclass of liquid.Undefined.","sidebar":"docsSidebar"},"guides/whitespace-suppression":{"id":"guides/whitespace-suppression","title":"Whitespace Suppression","description":"Block tags that, when rendered, contain only whitespace are suppressed by default.","sidebar":"docsSidebar"},"introduction/async-support":{"id":"introduction/async-support","title":"Async Support","description":"Python Liquid supports loading and rendering templates asynchronously. When BoundTemplate.render_async()","sidebar":"docsSidebar"},"introduction/auto-escape":{"id":"introduction/auto-escape","title":"HTML Auto-Escape","description":"Python Liquid offers HTML auto-escaping. Where render context variables are automatically escaped on output. Install optional dependencies for auto-escaping using the autoescape extra.","sidebar":"docsSidebar"},"introduction/caching":{"id":"introduction/caching","title":"Caching","description":"Template Caching","sidebar":"docsSidebar"},"introduction/comments":{"id":"introduction/comments","title":"Comments","description":"Using the standard {% comment %} tag you can mark a block of template text as a comment. Python Liquid does not parse or render anything between {% comment %} and {% endcomment %}.","sidebar":"docsSidebar"},"introduction/getting-started":{"id":"introduction/getting-started","title":"Getting Started","description":"Python Liquid is a Python engine for Liquid, the safe, customer-facing template language for flexible web apps.","sidebar":"docsSidebar"},"introduction/loading-templates":{"id":"introduction/loading-templates","title":"Loading Templates","description":"You can load templates from a file system or database, for example, by creating an Environment and configuring a template loader. You\'d also need a loader if you want to use the built-in {% include %} or {% render %} tags.","sidebar":"docsSidebar"},"introduction/objects-and-drops":{"id":"introduction/objects-and-drops","title":"Objects and Drops","description":"Python Liquid uses getitem internally for resolving property names and accessing items in a sequence. So, if your data is some combination of dictionaries and lists, for example, templates can reference objects as follows.","sidebar":"docsSidebar"},"introduction/render-context":{"id":"introduction/render-context","title":"Render Context","description":"The result of rendering a template depends on the context in which it is rendered. That is, available variables and their values, and options set on the bound Environment.","sidebar":"docsSidebar"},"introduction/strictness":{"id":"introduction/strictness","title":"Strictness","description":"Templates are parsed and rendered in strict mode by default. Where syntax and render-time type errors raise an exception as soon as possible. You can change the error tolerance mode with the tolerance argument to Environment or Template.","sidebar":"docsSidebar"},"jsonpath/filters":{"id":"jsonpath/filters","title":"JSONPath Filters","description":"This page documents filters included with the Liquid JSONPath package. See the filter reference for details of all standard filters. Also see the Python JSONPath docs for JSONPath selector syntax.","sidebar":"languageSidebar"},"jsonpath/introduction":{"id":"jsonpath/introduction","title":"Python Liquid JSONPath","description":"_Requires Python Liquid version 1.9.2 or later._","sidebar":"languageSidebar"},"jsonpath/tags":{"id":"jsonpath/tags","title":"JSONPath Tags","description":"This page documents tags included with the Liquid JSONPath package. See the tag reference for details of all standard tags. Also see the Python JSONPath docs for JSONPath selector syntax.","sidebar":"languageSidebar"},"language/filters":{"id":"language/filters","title":"Liquid Filters","description":"This page documents standard filters that are available with every Environment by default. See custom filters for examples of how to write your own and the extra filter reference for some non-standard filters.","sidebar":"languageSidebar"},"language/introduction":{"id":"language/introduction","title":"Introduction to Liquid","description":"Liquid is a template language, where source text (the template) contains placeholders for variables, conditional expressions for including or excluding blocks of text, and loops for repeating blocks of text. Any block can contain more variables, conditions and loops.","sidebar":"languageSidebar"},"language/tags":{"id":"language/tags","title":"Liquid Tags","description":"This page documents standard tags that are available with every Environment by default. See custom tags for examples of how to write your own and the extra tag reference for some non-standard tags.","sidebar":"languageSidebar"}}}')}}]);