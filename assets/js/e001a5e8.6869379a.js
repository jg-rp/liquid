"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[1267],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>c});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),p=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(l.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),g=p(t),u=i,c=g["".concat(l,".").concat(u)]||g[u]||m[u]||r;return t?a.createElement(c,o(o({ref:n},d),{},{components:t})):a.createElement(c,o({ref:n},d))}));function c(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[g]="string"==typeof e?e:i,o[1]=s;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2568:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const r={},o="Tag Analysis",s={unversionedId:"guides/tag-analysis",id:"guides/tag-analysis",title:"Tag Analysis",description:"_New in version 1.7.0_",source:"@site/docs/guides/tag-analysis.md",sourceDirName:"guides",slug:"/guides/tag-analysis",permalink:"/liquid/guides/tag-analysis",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/guides/tag-analysis.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Contextual Template Analysis",permalink:"/liquid/guides/contextual-template-analysis"},next:{title:"Undefined Variables",permalink:"/liquid/guides/undefined-variables"}},l={},p=[{value:"Tags",id:"tags",level:2},{value:"All Tags",id:"all-tags",level:2},{value:"Unclosed Tags",id:"unclosed-tags",level:2},{value:"Unexpected Tags",id:"unexpected-tags",level:2},{value:"Unknown Tags",id:"unknown-tags",level:2}],d={toc:p},g="wrapper";function m(e){let{components:n,...t}=e;return(0,i.kt)(g,(0,a.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"tag-analysis"},"Tag Analysis"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"New in version 1.7.0"))),(0,i.kt)("p",null,"Use ",(0,i.kt)("a",{parentName:"p",href:"/liquid/api/Environment#analyze_tags"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment.analyze_tags()")),", ",(0,i.kt)("a",{parentName:"p",href:"/liquid/api/Environment#analyze_tags_async"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment.analyze_tags_async()"))," or ",(0,i.kt)("a",{parentName:"p",href:"/liquid/api/Environment#analyze_tags_from_string"},(0,i.kt)("inlineCode",{parentName:"a"},"Environment.analyze_tags_from_string()"))," to analyze template source text and report tag usage and issues."),(0,i.kt)("p",null,"Unlike ",(0,i.kt)("a",{parentName:"p",href:"/liquid/guides/static-template-analysis"},"static template analysis"),", which also includes tag usage, ",(0,i.kt)("em",{parentName:"p"},"tag analysis")," operates on tokens generated from template source text, before creating an abstract syntax tree. This give us the opportunity to find unknown, unexpected and unbalanced tags that might cause the parser to raise an exception or skip template blocks."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Because this form of tag analysis happens before a template is fully parsed, it will never attempt to load and analyze partial templates from ",(0,i.kt)("inlineCode",{parentName:"p"},"{% include %}")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"{% render %}")," tags. Nor is it able to count template variables and filters, like ",(0,i.kt)("a",{parentName:"p",href:"/liquid/guides/static-template-analysis"},(0,i.kt)("inlineCode",{parentName:"a"},"BoundTemplate.analyze()"))," does.")),(0,i.kt)("h2",{id:"tags"},"Tags"),(0,i.kt)("p",null,"The object returned from ",(0,i.kt)("inlineCode",{parentName:"p"},"analyze_tags()")," is an instance of ",(0,i.kt)("a",{parentName:"p",href:"/liquid/api/tag-analysis"},(0,i.kt)("inlineCode",{parentName:"a"},"TagAnalysis")),". Its ",(0,i.kt)("inlineCode",{parentName:"p"},"tags")," property is a dictionary mapping tag names to a list of ",(0,i.kt)("inlineCode",{parentName:"p"},"(template_name, line_number)")," tuples, one tuple for each occurrence of the tag. ",(0,i.kt)("inlineCode",{parentName:"p"},"TagAnalysis.tags"),' includes unknown tags, but excludes "end" and ',(0,i.kt)("em",{parentName:"p"},"inner")," tags (",(0,i.kt)("inlineCode",{parentName:"p"},"else")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"break")," in this example)."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from liquid import Environment\n\nenv = Environment()\n\ntag_analysis = env.analyze_tags_from_string(\n    \"\"\"\\\n{% for foo in bar %}\n    {% if foo %}\n        {{ foo | upcase }}\n    {% else %}\n        {% break %}\n    {% endif %}\n{% endfor %}\n\"\"\"\n)\n\nprint(tag_analysis.tags)\n# {'for': [('<string>', 1)], 'if': [('<string>', 2)]}\n")),(0,i.kt)("h2",{id:"all-tags"},"All Tags"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"all_tags")," property of ",(0,i.kt)("inlineCode",{parentName:"p"},"TagAnalysis"),' is a mapping of tag names to their locations, including "end" tags and inner tags.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from pprint import pprint\nfrom liquid import Environment\n\nenv = Environment()\n\ntag_analysis = env.analyze_tags_from_string(\n    \"\"\"\\\n{% for foo in bar %}\n    {% if foo %}\n        {{ foo | upcase }}\n    {% endif %}\n{% endfor %}\n\"\"\"\n)\n\npprint(tag_analysis.all_tags)\n# {'endfor': [('<string>', 5)],\n#  'endif': [('<string>', 4)],\n#  'for': [('<string>', 1)],\n#  'if': [('<string>', 2)]}\n")),(0,i.kt)("h2",{id:"unclosed-tags"},"Unclosed Tags"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"unclosed_tags")," property of ",(0,i.kt)("inlineCode",{parentName:"p"},"TagAnalysis"),' includes the names and locations of block tags that do not have a matching "end" tag.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from liquid import Environment\n\nenv = Environment()\n\ntag_analysis = env.analyze_tags_from_string(\n    """\\\n{% for foo in bar %}\n    {% if foo %}\n        {{ foo | upcase }}\n    {% endif %}\n"""\n)\n\nprint(tag_analysis.unclosed_tags)\n# {\'for\': [(\'<string>\', 1)]}\n')),(0,i.kt)("h2",{id:"unexpected-tags"},"Unexpected Tags"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"unexpected_tags")," property of ",(0,i.kt)("inlineCode",{parentName:"p"},"TagAnalysis")," includes the names and locations of ",(0,i.kt)("em",{parentName:"p"},"inner")," tags that do not have an appropriate enclosing block tag. Like an ",(0,i.kt)("inlineCode",{parentName:"p"},"{% else %}")," appearing outside an ",(0,i.kt)("inlineCode",{parentName:"p"},"{% if %}")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"{% unless %}")," block, for example."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},(0,i.kt)("inlineCode",{parentName:"p"},"unexpected_tags"),' does not handle the possibility of an "inner" tag appearing in a partial template (using ',(0,i.kt)("inlineCode",{parentName:"p"},"{% include %}"),"), where an appropriate enclosing block is in a parent template.")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from liquid import Environment\n\nenv = Environment()\n\ntag_analysis = env.analyze_tags_from_string(\n    """\\\n{% for foo in bar %}\n  {{ foo }}\n{% endfor %}\n{% break %}\n"""\n)\n\nprint(tag_analysis.unexpected_tags)\n# {\'break\': [(\'<string>\', 4)]}\n')),(0,i.kt)("h2",{id:"unknown-tags"},"Unknown Tags"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"TagAnalysis.unknown_tags"),' contains the names and locations of tags that are not registered with the environment. If there\'s an unregistered block tag, only the tag starting the block will be reported. In the case of an "end" tag typo, the "end" tag will be reported as "unknown" and the start tag will be in ',(0,i.kt)("a",{parentName:"p",href:"#unclosed_tags"},(0,i.kt)("inlineCode",{parentName:"a"},"unclosed_tags")),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'from liquid import Environment\n\nenv = Environment()\n\ntag_analysis = env.analyze_tags_from_string(\n    """\\\n{% form article %}\n  <h2>Leave a comment</h2>\n  <input type="submit" value="Post comment" id="comment-submit" />\n{% endform %}\n"""\n)\n\nprint(tag_analysis.unknown_tags)\n# {\'form\': [(\'<string>\', 1)]}\n')))}m.isMDXComponent=!0}}]);