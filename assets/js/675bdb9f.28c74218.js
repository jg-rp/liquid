"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[6506],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>d,MDXProvider:()=>s,mdx:()=>h,useMDXComponents:()=>p,withMDXComponents:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(){return l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},l.apply(this,arguments)}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),m=function(e){return function(n){var t=p(n.components);return a.createElement(e,l({},n,{components:t}))}},p=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(d.Provider,{value:n},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},g=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,d=u(e,["components","mdxType","originalType","parentName"]),m=p(t),s=r,c=m["".concat(i,".").concat(s)]||m[s]||f[s]||l;return t?a.createElement(c,o(o({ref:n},d),{},{components:t})):a.createElement(c,o({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=g;var o={};for(var u in n)hasOwnProperty.call(n,u)&&(o[u]=n[u]);o.originalType=e,o[c]="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=t[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}g.displayName="MDXCreateElement"},6167:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>C,contentTitle:()=>S,default:()=>k,frontMatter:()=>E,metadata:()=>I,toc:()=>O});var a=t(7462),r=t(7294),l=t(3905),i=t(6010),o=t(2466),u=t(6550),d=t(1980),m=t(7392),p=t(12);function s(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}function c(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??s(t);return function(e){const n=(0,m.duplicates)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function f(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function g(e){let{queryString:n=!1,groupId:t}=e;const a=(0,u.useHistory)(),l=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,d.useQueryStringValue)(l),(0,r.useCallback)((e=>{if(!l)return;const n=new URLSearchParams(a.location.search);n.set(l,e),a.replace({...a.location,search:n.toString()})}),[l,a])]}function h(e){const{defaultValue:n,queryString:t=!1,groupId:a}=e,l=c(e),[i,o]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!f({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:l}))),[u,d]=g({queryString:t,groupId:a}),[m,s]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[a,l]=(0,p.useStorageSlot)(t);return[a,(0,r.useCallback)((e=>{t&&l.set(e)}),[t,l])]}({groupId:a}),h=(()=>{const e=u??m;return f({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{h&&o(h)}),[h]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!f({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);o(e),d(e),s(e)}),[d,s,l]),tabValues:l}}var b=t(2389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function x(e){let{className:n,block:t,selectedValue:l,selectValue:u,tabValues:d}=e;const m=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.useScrollPositionBlocker)(),s=e=>{const n=e.currentTarget,t=m.indexOf(n),a=d[t].value;a!==l&&(p(n),u(a))},c=e=>{let n=null;switch(e.key){case"Enter":s(e);break;case"ArrowRight":{const t=m.indexOf(e.currentTarget)+1;n=m[t]??m[0];break}case"ArrowLeft":{const t=m.indexOf(e.currentTarget)-1;n=m[t]??m[m.length-1];break}}n?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.default)("tabs",{"tabs--block":t},n)},d.map((e=>{let{value:n,label:t,attributes:o}=e;return r.createElement("li",(0,a.default)({role:"tab",tabIndex:l===n?0:-1,"aria-selected":l===n,key:n,ref:e=>m.push(e),onKeyDown:c,onClick:s},o,{className:(0,i.default)("tabs__item",y.tabItem,o?.className,{"tabs__item--active":l===n})}),t??n)})))}function v(e){let{lazy:n,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=l.find((e=>e.props.value===a));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==a}))))}function N(e){const n=h(e);return r.createElement("div",{className:(0,i.default)("tabs-container",y.tabList)},r.createElement(x,(0,a.default)({},e,n)),r.createElement(v,(0,a.default)({},e,n)))}function T(e){const n=(0,b.default)();return r.createElement(N,(0,a.default)({key:String(n)},e))}const q={tabItem:"tabItem_Ymn6"};function w(e){let{children:n,hidden:t,className:a}=e;return r.createElement("div",{role:"tabpanel",className:(0,i.default)(q.tabItem,a),hidden:t},n)}const E={},S="Getting Started",I={unversionedId:"introduction/getting-started",id:"introduction/getting-started",title:"Getting Started",description:"Python Liquid is a Python engine for Liquid, the safe, customer-facing template language for flexible web apps.",source:"@site/docs/introduction/getting-started.mdx",sourceDirName:"introduction",slug:"/introduction/getting-started",permalink:"/liquid/introduction/getting-started",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/introduction/getting-started.mdx",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",next:{title:"Loading Templates",permalink:"/liquid/introduction/loading-templates"}},C={},O=[{value:"Install",id:"install",level:2},{value:"Render",id:"render",level:2},{value:"Configure",id:"configure",level:2},{value:"Environment",id:"environment",level:2}],P={toc:O},j="wrapper";function k(e){let{components:n,...t}=e;return(0,l.mdx)(j,(0,a.default)({},P,t,{components:n,mdxType:"MDXLayout"}),(0,l.mdx)("h1",{id:"getting-started"},"Getting Started"),(0,l.mdx)("p",null,"Python Liquid is a ",(0,l.mdx)("a",{parentName:"p",href:"https://www.python.org/"},"Python")," engine for ",(0,l.mdx)("a",{parentName:"p",href:"https://shopify.github.io/liquid/"},"Liquid"),", the safe, customer-facing template language for flexible web apps."),(0,l.mdx)("p",null,"This page gets you started using Liquid with Python. See ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/language/introduction"},"Introduction to Liquid"),", the ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/language/filters"},"filter reference")," and the ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/language/tags"},"tag reference")," to learn about writing Liquid templates."),(0,l.mdx)("h2",{id:"install"},"Install"),(0,l.mdx)("p",null,"Install Python Liquid from ",(0,l.mdx)("a",{parentName:"p",href:"https://pypi.org/project/python-liquid/"},"PyPi"),":"),(0,l.mdx)(T,{groupId:"pypi-manager",mdxType:"Tabs"},(0,l.mdx)(w,{value:"pip",label:"pip",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"python -m pip install -U python-liquid\n"))),(0,l.mdx)(w,{value:"pipenv",label:"pipenv",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"pipenv install python-liquid\n"))),(0,l.mdx)(w,{value:"poetry",label:"poetry",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"poetry add python-liquid\n")))),(0,l.mdx)("p",null,"Or ",(0,l.mdx)("a",{parentName:"p",href:"https://anaconda.org/conda-forge/python-liquid"},"conda-forge"),":"),(0,l.mdx)(T,{groupId:"conda-manager",mdxType:"Tabs"},(0,l.mdx)(w,{value:"anaconda",label:"anaconda",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"conda install -c conda-forge python-liquid\n"))),(0,l.mdx)(w,{value:"miniconda",label:"miniconda",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"conda install -c conda-forge python-liquid\n"))),(0,l.mdx)(w,{value:"miniforge",label:"miniforge",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"conda install python-liquid\n"))),(0,l.mdx)(w,{value:"mamba",label:"mamba",mdxType:"TabItem"},(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-bash"},"mamba install python-liquid\n")))),(0,l.mdx)("h2",{id:"render"},"Render"),(0,l.mdx)("p",null,"Render a template string by creating a ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"Template"))," and calling its ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/BoundTemplate#render"},(0,l.mdx)("inlineCode",{parentName:"a"},"render()"))," method."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'from liquid import Template\n\ntemplate = Template("Hello, {{ you }}!")\nprint(template.render(you="World"))  # Hello, World!\nprint(template.render(you="Liquid"))  # Hello, Liquid!\n')),(0,l.mdx)("p",null,"Keyword arguments passed to ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/BoundTemplate#render"},(0,l.mdx)("inlineCode",{parentName:"a"},"render()"))," are available as variables for templates to use in Liquid expressions."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'from liquid import Template\n\ntemplate = Template(\n    "{% for person in people %}"\n    "Hello, {{ person.name }}!\\n"\n    "{% endfor %}"\n)\n\ndata = {\n    "people": [\n        {"name": "John"},\n        {"name": "Sally"},\n    ]\n}\n\nprint(template.render(**data))\n# Hello, John!\n# Hello, Sally!\n')),(0,l.mdx)("h2",{id:"configure"},"Configure"),(0,l.mdx)("p",null,"Configure template parsing and rendering behavior with extra arguments to ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"Template")),". The following example renders a template in ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/introduction/strictness"},"strict mode")," and will raise an exception whenever an undefined variable is used. See ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"liquid.Template"))," for all available options."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'from liquid import Template\nfrom liquid import Mode\nfrom liquid import StrictUndefined\n\ntemplate = Template(\n    "Hello, {{ you }}!",\n    tolerance=Mode.STRICT,\n    undefined=StrictUndefined,\n)\n\nresult = template.render(you="World")\n')),(0,l.mdx)("admonition",{type:"tip"},(0,l.mdx)("p",{parentName:"admonition"},"Keep reading to see how to configure an environment once, then load and render templates from it.")),(0,l.mdx)("h2",{id:"environment"},"Environment"),(0,l.mdx)("p",null,"While ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"Template"))," can be convenient, more often than not an application will want to configure a single ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,l.mdx)("inlineCode",{parentName:"a"},"Environment")),", then load and render templates from it. This is usually more efficient than using ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"Template"))," directly."),(0,l.mdx)("p",null,"All templates rendered from an ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,l.mdx)("inlineCode",{parentName:"a"},"Environment"))," will share the environment's configuration. See ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,l.mdx)("inlineCode",{parentName:"a"},"liquid.Environment"))," for all available options. Notice that ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,l.mdx)("inlineCode",{parentName:"a"},"Environment"))," accepts a ",(0,l.mdx)("inlineCode",{parentName:"p"},"loader")," argument, whereas ",(0,l.mdx)("a",{parentName:"p",href:"/liquid/api/Template"},(0,l.mdx)("inlineCode",{parentName:"a"},"Template"))," does not."),(0,l.mdx)("pre",null,(0,l.mdx)("code",{parentName:"pre",className:"language-python"},'from liquid import Environment\nfrom liquid import Mode\nfrom liquid import StrictUndefined\nfrom liquid import FileSystemLoader\n\nenv = Environment(\n    tolerance=Mode.STRICT,\n    undefined=StrictUndefined,\n    loader=FileSystemLoader("./templates/"),\n)\n\ntemplate = env.from_string("Hello, {{ you }}!")\nresult = template.render(you="World")\n')))}k.isMDXComponent=!0}}]);