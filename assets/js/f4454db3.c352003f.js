"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[5716],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>s,mdx:()=>N,useMDXComponents:()=>u,withMDXComponents:()=>d});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(){return r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r.apply(this,arguments)}function m(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?m(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):m(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=a.createContext({}),d=function(e){return function(n){var t=u(n.components);return a.createElement(e,r({},n,{components:t}))}},u=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=u(e.components);return a.createElement(p.Provider,{value:n},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},x=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,m=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(t),s=i,c=d["".concat(m,".").concat(s)]||d[s]||f[s]||r;return t?a.createElement(c,l(l({ref:n},p),{},{components:t})):a.createElement(c,l({ref:n},p))}));function N(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,m=new Array(r);m[0]=x;var l={};for(var o in n)hasOwnProperty.call(n,o)&&(l[o]=n[o]);l.originalType=e,l[c]="string"==typeof e?e:i,m[1]=l;for(var p=2;p<r;p++)m[p]=t[p];return a.createElement.apply(null,m)}return a.createElement.apply(null,t)}x.displayName="MDXCreateElement"},9684:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>m,default:()=>s,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(7462),i=(t(7294),t(3905));const r={id:"Template"},m="liquid.Template",l={unversionedId:"api/Template",id:"api/Template",title:"liquid.Template",description:"A factory function. Create a liquid.template.BoundTemplate, automatically creating a liquid.Environment to bind it to.",source:"@site/docs/api/template.md",sourceDirName:"api",slug:"/api/Template",permalink:"/liquid/api/Template",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/api/template.md",tags:[],version:"current",frontMatter:{id:"Template"},sidebar:"apiSidebar",next:{title:"liquid.Environment",permalink:"/liquid/api/Environment"}},o={},p=[{value:"<code>Template</code>",id:"template",level:2}],d={toc:p},u="wrapper";function s(e){let{components:n,...t}=e;return(0,i.mdx)(u,(0,a.default)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"liquidtemplate"},"liquid.Template"),(0,i.mdx)("p",null,"A factory function. Create a ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/BoundTemplate"},(0,i.mdx)("inlineCode",{parentName:"a"},"liquid.template.BoundTemplate")),", automatically creating a ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,i.mdx)("inlineCode",{parentName:"a"},"liquid.Environment"))," to bind it to."),(0,i.mdx)("h2",{id:"template"},(0,i.mdx)("inlineCode",{parentName:"h2"},"Template")),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"Template(source, [options]) -> liquid.template.BoundTemplate")),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Parameters:")),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"source: str")," - The liquid template source code.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"tag_start_string: str")," - The sequence of characters indicating the start of a liquid tag.\nDefaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"{%"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"tag_end_string: str")," - The sequence of characters indicating the end of a liquid tag. Defaults to\n",(0,i.mdx)("inlineCode",{parentName:"p"},"%}"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"statement_start_string: str")," - The sequence of characters indicating the start of an output\nstatement. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"{{"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"statement_end_string: str")," - The sequence of characters indicating the end of an output\nstatement. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"}}"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"comment_start_string: str")," - The sequence of characters indicating the start of a comment.\nDefaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"{#"),". ",(0,i.mdx)("inlineCode",{parentName:"p"},"template_comments")," must be ",(0,i.mdx)("inlineCode",{parentName:"p"},"True")," for ",(0,i.mdx)("inlineCode",{parentName:"p"},"comment_start_string")," to have any\neffect.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"comment_end_string: str")," - The sequence of characters indicating the end of a comment. Defaults\nto ",(0,i.mdx)("inlineCode",{parentName:"p"},"#}"),". ",(0,i.mdx)("inlineCode",{parentName:"p"},"template_comments")," must be ",(0,i.mdx)("inlineCode",{parentName:"p"},"True")," for ",(0,i.mdx)("inlineCode",{parentName:"p"},"comment_end_string")," to have any effect.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"template_comments: bool")," - If ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),", enable template comments. Where, by default, anything\nbetween ",(0,i.mdx)("inlineCode",{parentName:"p"},"{#")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"#}")," is considered a comment. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"False"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"tolerance: Mode")," - Indicates how tolerant to be of errors. Must be one of ",(0,i.mdx)("inlineCode",{parentName:"p"},"Mode.LAX"),", ",(0,i.mdx)("inlineCode",{parentName:"p"},"Mode.WARN"),"\nor ",(0,i.mdx)("inlineCode",{parentName:"p"},"Mode.STRICT"),". Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"Mode.STRICT"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"undefined: liquid.Undefined")," - A subclass of Undefined that represents undefined values. Could be\none of the built-in undefined types, Undefined, DebugUndefined or StrictUndefined. Defaults to\n",(0,i.mdx)("inlineCode",{parentName:"p"},"Undefined"),", an undefined type that silently ignores undefined values.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"strict_filters: bool")," - If ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),", will raise an exception upon finding an undefined filter.\nOtherwise undefined filters are silently ignored. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"autoescape: bool")," - If ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),', all context values will be HTML-escaped before output unless\nthey\'ve been explicitly marked as "safe". Requires the package Markupsafe. Defaults to ',(0,i.mdx)("inlineCode",{parentName:"p"},"False"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"auto_reload: bool")," - If ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),", loaders that have an ",(0,i.mdx)("inlineCode",{parentName:"p"},"uptodate")," callable will reload template\nsource data automatically. For deployments where template sources don't change between service\nreloads, setting auto_reload to False can yield an increase in performance by avoiding calls to\n",(0,i.mdx)("inlineCode",{parentName:"p"},"uptodate"),". Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"True"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"cache_size: int")," - The capacity of the template cache in number of templates. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"300"),".\nIf ",(0,i.mdx)("inlineCode",{parentName:"p"},"cache_size")," is ",(0,i.mdx)("inlineCode",{parentName:"p"},"None")," or less than ",(0,i.mdx)("inlineCode",{parentName:"p"},"1"),", it has the effect of setting ",(0,i.mdx)("inlineCode",{parentName:"p"},"auto_reload")," to ",(0,i.mdx)("inlineCode",{parentName:"p"},"False"),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"expression_cache_size: int")," - The capacity of each of the common expression caches. Defaults to\n",(0,i.mdx)("inlineCode",{parentName:"p"},"0"),", disabling expression caching.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"globals: Optional[Mapping[str, object]]")," - An optional mapping that will be added to the context\nevery time the resulting ",(0,i.mdx)("inlineCode",{parentName:"p"},"BoundTemplate")," is rendered. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},"None"),"."))),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Return type:")," ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/BoundTemplate"},(0,i.mdx)("inlineCode",{parentName:"a"},"liquid.template.BoundTemplate"))))}s.isMDXComponent=!0}}]);