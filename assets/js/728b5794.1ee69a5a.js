"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[55],{327:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var n=a(3117),r=(a(7294),a(3905));const l={},i="Babel Tags",o={unversionedId:"babel/tags",id:"babel/tags",title:"Babel Tags",description:"Optional tags provided by the liquid-babel package.",source:"@site/docs/babel/tags.md",sourceDirName:"babel",slug:"/babel/tags",permalink:"/liquid/babel/tags",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/babel/tags.md",tags:[],version:"current",frontMatter:{},sidebar:"languageSidebar",previous:{title:"Babel Filters",permalink:"/liquid/babel/filters"},next:{title:"Python Liquid JSONPath",permalink:"/liquid/jsonpath/introduction"}},p={},s=[{value:"translate",id:"translate",level:2},{value:"Options",id:"options",level:3}],d={toc:s};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"babel-tags"},"Babel Tags"),(0,r.kt)("p",null,"Optional ",(0,r.kt)("a",{parentName:"p",href:"/liquid/language/tags"},"tags")," provided by the ",(0,r.kt)("a",{parentName:"p",href:"/liquid/babel/introduction"},"liquid-babel")," package."),(0,r.kt)("h2",{id:"translate"},"translate"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"New in Liquid Babel version 0.3.0"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"{% translate\n    [context: <string>]\n    [, count: <number>]\n    [, <identifier>: <object> [| <filter>] ... ] %}\n  <text,variable> ...\n[ {% plural %} <text,variable> ... ]\n{% endtranslate %}\n")),(0,r.kt)("p",null,"Render the localized translation of a message. If a German ",(0,r.kt)("a",{parentName:"p",href:"/liquid/babel/introduction#message-catalogs"},"Translations")," object is found in the current render context:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-liquid"},"{% translate %}\n  Hello, World!\n{% endtranslate %}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plain",metastring:'title="output"',title:'"output"'},"Hallo Welt!\n")),(0,r.kt)("p",null,"If a ",(0,r.kt)("inlineCode",{parentName:"p"},"{% plural %}")," block follows the message text and the ",(0,r.kt)("inlineCode",{parentName:"p"},"count")," argument is considered plural, the ",(0,r.kt)("inlineCode",{parentName:"p"},"{% plural %}")," block will be rendered instead."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-liquid"},"{% translate count: 2 %}\n  Hello, World!\n{% plural %}\n  Hello, Worlds!\n{% endtranslate %}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plain",metastring:'title="output"',title:'"output"'},"Hallo Welten!\n")),(0,r.kt)("p",null,"Keyword arguments are used to populate translatable message variables. These variables look like Liquid output statements, but can not use dotted or bracketed property/attribute access, or filters."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-liquid"},"{% translate you: 'Sue' %}\n  Hello, {{ you }}!\n{% endtranslate %}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plain",metastring:'title="output"',title:'"output"'},"Hallo Sue!\n")),(0,r.kt)("p",null,"Keyword arguments can use simple, no-argument filters like ",(0,r.kt)("inlineCode",{parentName:"p"},"size")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"capitalize"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-liquid"},"{% translate you: 'Sue' | captialize %}\n  Hello, {{ you }}!\n{% endtranslate %}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-plain",metastring:'title="output"',title:'"output"'},"Hallo SUE!\n")),(0,r.kt)("h3",{id:"options"},"Options"),(0,r.kt)("p",null,"The included ",(0,r.kt)("inlineCode",{parentName:"p"},"translate")," tag can be customized by subclassing ",(0,r.kt)("inlineCode",{parentName:"p"},"TranslateTag")," and overriding class attributes and/or methods. This example changes its name from ",(0,r.kt)("inlineCode",{parentName:"p"},"translate")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"trans")," and disables support for filtered arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'from liquid import Environment\nfrom liquid_babel.tags.translate import TranslateTag\n\nclass MyTranslateTag(TranslateTag):\n    name = "trans"\n    end = "endtrans"\n    simple_filters = False\n\nenv = Environment()\nenv.add_tag(MyTranslateTag)\n')),(0,r.kt)("p",null,"This table shows configurable ",(0,r.kt)("inlineCode",{parentName:"p"},"TranslateTag")," class attributes/property."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Property"),(0,r.kt)("th",{parentName:"tr",align:null},"Type"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the tag that starts the block, as used by template authors."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"translate"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"end")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the tag that ends the block, as used by template authors."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"endtranslate"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"plural_name")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"str")),(0,r.kt)("td",{parentName:"tr",align:null},"The name of the tag that starts the plural block, as used by template authors."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'"plural"'))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"simple_filters")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"True"),", allow simple, no-argument filters to be used with keyword arguments."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"trim_messages")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"bool")),(0,r.kt)("td",{parentName:"tr",align:null},"If ",(0,r.kt)("inlineCode",{parentName:"td"},"True"),", normalize message whitespace."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"True"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"node_class")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"ast.Node")),(0,r.kt)("td",{parentName:"tr",align:null},"The node to return from ",(0,r.kt)("inlineCode",{parentName:"td"},"TranslateTag.parse()"),"."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"TranslateNode"))))),(0,r.kt)("p",null,"Further customization can be achieved by extending ",(0,r.kt)("inlineCode",{parentName:"p"},"TranslateNode")," and overriding ",(0,r.kt)("inlineCode",{parentName:"p"},"resolve_count()"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"resolve_message_context()")," and/or ",(0,r.kt)("inlineCode",{parentName:"p"},"gettext()"),"."))}u.isMDXComponent=!0},3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),m=s(a),c=r,k=m["".concat(p,".").concat(c)]||m[c]||u[c]||l;return a?n.createElement(k,i(i({ref:t},d),{},{components:a})):n.createElement(k,i({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"}}]);