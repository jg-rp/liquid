"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[7930],{9669:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>l,toc:()=>o});var s=i(4848),d=i(8453);const t={id:"Tag"},r="liquid.tag.Tag",l={id:"api/Tag",title:"liquid.tag.Tag",description:"Base class for all built-in and custom template tags.",source:"@site/docs/api/tag.md",sourceDirName:"api",slug:"/api/Tag",permalink:"/liquid/api/Tag",draft:!1,unlisted:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/api/tag.md",tags:[],version:"current",frontMatter:{id:"Tag"},sidebar:"apiSidebar",previous:{title:"liquid.Context",permalink:"/liquid/api/context"},next:{title:"liquid.ast.Node",permalink:"/liquid/api/node"}},c={},o=[{value:"<code>Tag</code>",id:"tag",level:2},{value:"Class Attributes",id:"class-attributes",level:2},{value:"<code>block</code>",id:"block",level:3},{value:"<code>name</code>",id:"name",level:3},{value:"<code>end</code>",id:"end",level:3},{value:"Properties",id:"properties",level:2},{value:"<code>env</code>",id:"env",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>get_node</code>",id:"get_node",level:3},{value:"<code>parse</code>",id:"parse",level:3}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,d.useMDXComponents)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"liquidtagtag",children:"liquid.tag.Tag"}),"\n",(0,s.jsxs)(n.p,{children:["Base class for all built-in and ",(0,s.jsx)(n.a,{href:"/liquid/guides/custom-tags",children:"custom template tags"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"tag",children:(0,s.jsx)(n.code,{children:"Tag"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"class Tag(env)"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Parameters"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"env: liquid.Environment"})," - The ",(0,s.jsx)(n.a,{href:"/liquid/api/Environment",children:(0,s.jsx)(n.code,{children:"Environment"})})," that manages this tag."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"class-attributes",children:"Class Attributes"}),"\n",(0,s.jsx)(n.h3,{id:"block",children:(0,s.jsx)(n.code,{children:"block"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),": ",(0,s.jsx)(n.code,{children:"bool = True"})]}),"\n",(0,s.jsx)(n.p,{children:"Indicates if the tag is a block tag."}),"\n",(0,s.jsx)(n.h3,{id:"name",children:(0,s.jsx)(n.code,{children:"name"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),": ",(0,s.jsx)(n.code,{children:'str = ""'})]}),"\n",(0,s.jsxs)(n.p,{children:["The name of the tag. Like ",(0,s.jsx)(n.code,{children:'"if"'})," or ",(0,s.jsx)(n.code,{children:'"for"'}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"end",children:(0,s.jsx)(n.code,{children:"end"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),": ",(0,s.jsx)(n.code,{children:'str = ""'})]}),"\n",(0,s.jsxs)(n.p,{children:["The end or closing tag name. If ",(0,s.jsx)(n.code,{children:"block"})," is ",(0,s.jsx)(n.code,{children:"True"}),", ",(0,s.jsx)(n.code,{children:"end"})," must be set. By convention it is\n",(0,s.jsx)(n.code,{children:'"end<tag.name>"'}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(n.h3,{id:"env",children:(0,s.jsx)(n.code,{children:"env"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),": ",(0,s.jsx)(n.code,{children:"liquid.Environment"})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/liquid/api/Environment",children:(0,s.jsx)(n.code,{children:"Environment"})})," that manages this tag."]}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"get_node",children:(0,s.jsx)(n.code,{children:"get_node"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"get_node(self, stream: TokenStream) -> Node"})}),"\n",(0,s.jsxs)(n.p,{children:["Used internally to delegate to ",(0,s.jsx)(n.code,{children:"Tag.parse"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"parse",children:(0,s.jsx)(n.code,{children:"parse"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"parse(self, stream: TokenStream) -> Node:"})}),"\n",(0,s.jsxs)(n.p,{children:["Abstract method. Return a parse tree node by parsing tokens from the given stream. Every tag must implement ",(0,s.jsx)(n.code,{children:"parse"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,d.useMDXComponents)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.r(n),i.d(n,{MDXProvider:()=>l,useMDXComponents:()=>r});var s=i(6540);const d={},t=s.createContext(d);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);