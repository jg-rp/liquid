"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[4157],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>u,mdx:()=>y,useMDXComponents:()=>m,withMDXComponents:()=>s});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(){return a=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},a.apply(this,arguments)}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){return function(n){var t=m(n.components);return r.createElement(e,a({},n,{components:t}))}},m=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=m(e.components);return r.createElement(p.Provider,{value:n},e.children)},c="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},x=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=d(e,["components","mdxType","originalType","parentName"]),s=m(t),u=i,c=s["".concat(o,".").concat(u)]||s[u]||f[u]||a;return t?r.createElement(c,l(l({ref:n},p),{},{components:t})):r.createElement(c,l({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=x;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[c]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}x.displayName="MDXCreateElement"},7803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const a={},o="liquid.loaders.FileExtensionLoader",l={unversionedId:"api/fileextensionloader",id:"api/fileextensionloader",title:"liquid.loaders.FileExtensionLoader",description:"A loader that inherits from FileSystemLoader and adds a file name extension to any template_name that does not have one.",source:"@site/docs/api/fileextensionloader.md",sourceDirName:"api",slug:"/api/fileextensionloader",permalink:"/liquid/api/fileextensionloader",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/api/fileextensionloader.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"liquid.loaders.FileSystemLoader",permalink:"/liquid/api/filesystemloader"},next:{title:"liquid.loaders.ChoiceLoader",permalink:"/liquid/api/choiceloader"}},d={},p=[{value:"FileExtensionLoader",id:"fileextensionloader",level:2}],s={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,i.mdx)(m,(0,r.default)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"liquidloadersfileextensionloader"},"liquid.loaders.FileExtensionLoader"),(0,i.mdx)("p",null,"A loader that inherits from ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/filesystemloader"},(0,i.mdx)("inlineCode",{parentName:"a"},"FileSystemLoader"))," and adds a file name extension to any ",(0,i.mdx)("inlineCode",{parentName:"p"},"template_name")," that does not have one."),(0,i.mdx)("p",null,"When rendering from an environment configured with a ",(0,i.mdx)("inlineCode",{parentName:"p"},"FileExtensionLoader"),", templates can, for example, use ",(0,i.mdx)("inlineCode",{parentName:"p"},"{% render 'somesnippet' %}")," and ",(0,i.mdx)("inlineCode",{parentName:"p"},"{% include 'mysection' %}")," instead of ",(0,i.mdx)("inlineCode",{parentName:"p"},"{% render 'somesnippet.liquid' %}")," or ",(0,i.mdx)("inlineCode",{parentName:"p"},"{% include 'mysection.html' %}"),"."),(0,i.mdx)("h2",{id:"fileextensionloader"},"FileExtensionLoader"),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},'class FileExtensionLoader(search_path, encoding="utf-8", ext=".liquid")')),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},"Parameters"),":"),(0,i.mdx)("ul",null,(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},"search_path: Union[str, Path, Iterable[Union[str, Path]]]")," - One or more paths to search.")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},'encoding: str = "utf-8"')," - Open template files with the given encoding. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},'"utf-8"'),".")),(0,i.mdx)("li",{parentName:"ul"},(0,i.mdx)("p",{parentName:"li"},(0,i.mdx)("inlineCode",{parentName:"p"},'ext: str = ".liquid"')," - A default file extension. Should include a leading period. Defaults to ",(0,i.mdx)("inlineCode",{parentName:"p"},".liquid"),"."))))}u.isMDXComponent=!0}}]);