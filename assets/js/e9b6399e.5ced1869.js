"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[1984],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,y=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(y,i(i({ref:t},p),{},{components:n})):a.createElement(y,i({ref:t},p))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7015:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(7462),r=(n(7294),n(3905));const o={},i="Async Support",s={unversionedId:"introduction/async-support",id:"introduction/async-support",title:"Async Support",description:"Python Liquid supports loading and rendering templates asynchronously. When BoundTemplate.render_async()",source:"@site/docs/introduction/async-support.md",sourceDirName:"introduction",slug:"/introduction/async-support",permalink:"/liquid/introduction/async-support",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/introduction/async-support.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"HTML Auto-Escape",permalink:"/liquid/introduction/auto-escape"},next:{title:"Caching",permalink:"/liquid/introduction/caching"}},l={},c=[{value:"Async Loaders",id:"async-loaders",level:2},{value:"Async Drops",id:"async-drops",level:2}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"async-support"},"Async Support"),(0,r.kt)("p",null,"Python Liquid supports loading and rendering templates asynchronously. When ",(0,r.kt)("a",{parentName:"p",href:"/liquid/api/BoundTemplate"},(0,r.kt)("inlineCode",{parentName:"a"},"BoundTemplate.render_async()")),"\nis awaited, ",(0,r.kt)("a",{parentName:"p",href:"/liquid/language/tags#render"},(0,r.kt)("inlineCode",{parentName:"a"},"{% render %}"))," and ",(0,r.kt)("a",{parentName:"p",href:"/liquid/language/tags#include"},(0,r.kt)("inlineCode",{parentName:"a"},"{% include %}"))," tags will use ",(0,r.kt)("a",{parentName:"p",href:"/liquid/api/Environment#get-template-async"},(0,r.kt)("inlineCode",{parentName:"a"},"Environment.get_template_async()")),", which delegates to ",(0,r.kt)("a",{parentName:"p",href:"/liquid/api/filesystemloader#get_source_async"},(0,r.kt)("inlineCode",{parentName:"a"},"get_source_async()"))," of the configured template loader."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import asyncio\nfrom liquid import Environment, FileSystemLoader\n\nenv = Environment(loader=FileSystemLoader("templates/"))\n\nasync def coro():\n    template = await env.get_template_async("index.html")\n    return await template.render_async(you="World")\n\nresult = asyncio.run(coro())\n')),(0,r.kt)("h2",{id:"async-loaders"},"Async Loaders"),(0,r.kt)("p",null,"Custom template loaders should implement ",(0,r.kt)("a",{parentName:"p",href:"/liquid/api/filesystemloader#get_source_async"},(0,r.kt)("inlineCode",{parentName:"a"},"get_source_async()")),"\nand pass a coroutine as the ",(0,r.kt)("inlineCode",{parentName:"p"},"uptodate")," argument to ",(0,r.kt)("inlineCode",{parentName:"p"},"TemplateSource"),"."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"/liquid/guides/custom-loaders#async-database-loader"},(0,r.kt)("inlineCode",{parentName:"a"},"AsyncDatabaseLoader"))," for an example that loads\ntemplates from a PostgreSQL database asynchronously."),(0,r.kt)("h2",{id:"async-drops"},"Async Drops"),(0,r.kt)("p",null,"Custom ",(0,r.kt)("a",{parentName:"p",href:"/liquid/introduction/objects-and-drops"},"drops")," can implement ",(0,r.kt)("inlineCode",{parentName:"p"},"__getitem_async__()"),". If an instance of a drop that implements ",(0,r.kt)("inlineCode",{parentName:"p"},"__getitem_async__()")," appears in a ",(0,r.kt)("a",{parentName:"p",href:"/liquid/api/BoundTemplate#render_async"},(0,r.kt)("inlineCode",{parentName:"a"},"render_async()"))," context, ",(0,r.kt)("inlineCode",{parentName:"p"},"__getitem_async__()")," will be awaited instead of calling ",(0,r.kt)("inlineCode",{parentName:"p"},"__getitem__()"),"."),(0,r.kt)("p",null,"Most likely used for lazy loading objects from a database, an async drop could look something like this."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'class AsyncCollection(abc.Mapping):\n    def __init__(self, val):\n        self.keys = ["products"]\n        self.cached_products = []\n\n    def __len__(self):\n        return 1\n\n    def __iter__(self):\n        return iter(self["products"])\n\n    async def __aiter__(self):\n        # Note that Liquid\'s built-in `for` loop does not yet support async iteration.\n        return iter(self.__getitem_async__("products"))\n\n    def __getitem__(self, k):\n        if not self.cached_products:\n            # Blocking IO here\n            self.cached_products = get_stuff_from_database()\n        return self.cache_products\n\n    async def __getitem_async__(self, k):\n        if not self.cached_products:\n            # Do async IO here.\n            self.cached_products = await get_stuff_from_database_async()\n        return self.cache_products\n')))}u.isMDXComponent=!0}}]);