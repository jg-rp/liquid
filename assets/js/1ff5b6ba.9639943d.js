"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[330],{3810:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>s,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"api/cachingchoiceloader","title":"liquid.loaders.CachingChoiceLoader","description":"A template loader inherits from ChoiceLoader and caches parsed templates in memory.","source":"@site/docs/api/cachingchoiceloader.md","sourceDirName":"api","slug":"/api/cachingchoiceloader","permalink":"/liquid/api/cachingchoiceloader","draft":false,"unlisted":false,"editUrl":"https://github.com/jg-rp/liquid/tree/docs/docs/api/cachingchoiceloader.md","tags":[],"version":"current","frontMatter":{},"sidebar":"apiSidebar","previous":{"title":"liquid.loaders.ChoiceLoader","permalink":"/liquid/api/choiceloader"},"next":{"title":"liquid.loaders.DictLoader","permalink":"/liquid/api/dictloader"}}');var r=n(4848),c=n(8453);const a={},d="liquid.loaders.CachingChoiceLoader",s={},t=[{value:"<code>CachingChoiceLoader</code>",id:"cachingchoiceloader",level:2}];function l(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.useMDXComponents)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"liquidloaderscachingchoiceloader",children:"liquid.loaders.CachingChoiceLoader"})}),"\n",(0,r.jsxs)(i.p,{children:["A template loader inherits from ",(0,r.jsx)(i.a,{href:"/liquid/api/choiceloader",children:(0,r.jsx)(i.code,{children:"ChoiceLoader"})})," and caches parsed templates in memory."]}),"\n",(0,r.jsx)(i.h2,{id:"cachingchoiceloader",children:(0,r.jsx)(i.code,{children:"CachingChoiceLoader"})}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-python",children:'CachingChoiceLoader(\n    loaders: List[BaseLoader],\n    *,\n    auto_reload: bool = True,\n    namespace_key: str = "",\n    cache_size: int = 300\n)\n'})}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Parameters"}),":"]}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"loaders: List[BaseLoader]"})," - A list of template loaders implementing ",(0,r.jsx)(i.code,{children:"liquid.loaders.BaseLoader"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"auto_reload: bool = True"})," - If ",(0,r.jsx)(i.code,{children:"True"}),", automatically reload a cached template if it has been updated."]}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:'namespace_key: str = ""'}),' - The name of a global render context variable or loader keyword argument that resolves to the current loader "namespace" or "scope".']}),"\n"]}),"\n",(0,r.jsxs)(i.li,{children:["\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.code,{children:"cache_size: int: 300"})," - The maximum number of templates to hold in the cache before removing the least recently used template."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:i}={...(0,c.useMDXComponents)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,i,n)=>{n.r(i),n.d(i,{MDXProvider:()=>d,useMDXComponents:()=>a});var o=n(6540);const r={},c=o.createContext(r);function a(e){const i=o.useContext(c);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(c.Provider,{value:i},e.children)}}}]);