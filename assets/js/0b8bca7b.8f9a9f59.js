"use strict";(self.webpackChunkliquid_docs=self.webpackChunkliquid_docs||[]).push([[6197],{3905:(e,n,t)=>{t.r(n),t.d(n,{MDXContext:()=>p,MDXProvider:()=>c,mdx:()=>y,useMDXComponents:()=>d,withMDXComponents:()=>m});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(){return o=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])}return e},o.apply(this,arguments)}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),m=function(e){return function(n){var t=d(n.components);return r.createElement(e,o({},n,{components:t}))}},d=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):u(u({},n),e)),t},c=function(e){var n=d(e.components);return r.createElement(p.Provider,{value:n},e.children)},s="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},v=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=d(t),c=i,s=m["".concat(a,".").concat(c)]||m[c]||f[c]||o;return t?r.createElement(s,u(u({ref:n},p),{},{components:t})):r.createElement(s,u({ref:n},p))}));function y(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=v;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u[s]="string"==typeof e?e:i,a[1]=u;for(var p=2;p<o;p++)a[p]=t[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}v.displayName="MDXCreateElement"},8160:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>u,toc:()=>p});var r=t(7462),i=(t(7294),t(3905));const o={},a="liquid.future.Environment",u={unversionedId:"api/future-environment",id:"api/future-environment",title:"liquid.future.Environment",description:"_New in version 1.7.0_",source:"@site/docs/api/future-environment.md",sourceDirName:"api",slug:"/api/future-environment",permalink:"/liquid/api/future-environment",draft:!1,editUrl:"https://github.com/jg-rp/liquid/tree/docs/docs/api/future-environment.md",tags:[],version:"current",frontMatter:{},sidebar:"apiSidebar",previous:{title:"liquid.CachingFileSystemLoader",permalink:"/liquid/api/cachingfilesystemloader"},next:{title:"liquid.loaders.FileSystemLoader",permalink:"/liquid/api/filesystemloader"}},l={},p=[{value:"<code>Environment</code>",id:"environment",level:2}],m={toc:p},d="wrapper";function c(e){let{components:n,...t}=e;return(0,i.mdx)(d,(0,r.default)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.mdx)("h1",{id:"liquidfutureenvironment"},"liquid.future.Environment"),(0,i.mdx)("p",null,(0,i.mdx)("strong",{parentName:"p"},(0,i.mdx)("em",{parentName:"strong"},"New in version 1.7.0"))),(0,i.mdx)("p",null,"An ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,i.mdx)("inlineCode",{parentName:"a"},"Environment"))," configured for maximum compatibility with the reference implementation of Liquid. See ",(0,i.mdx)("a",{parentName:"p",href:"/known_issues"},"known issues")," for a description of the incompatibilities that ",(0,i.mdx)("inlineCode",{parentName:"p"},"liquid.future.Environment")," resolves."),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"liquid.Environment"),' should be considered the most stable "standard" configuration, ',(0,i.mdx)("inlineCode",{parentName:"p"},"liquid.future.Environment")," sacrifices stability for improved compatibility with Ruby Liquid."),(0,i.mdx)("h2",{id:"environment"},(0,i.mdx)("inlineCode",{parentName:"h2"},"Environment")),(0,i.mdx)("p",null,(0,i.mdx)("inlineCode",{parentName:"p"},"class Environment([options])")),(0,i.mdx)("p",null,"See ",(0,i.mdx)("a",{parentName:"p",href:"/liquid/api/Environment"},(0,i.mdx)("inlineCode",{parentName:"a"},"liquid.Environment"))))}c.isMDXComponent=!0}}]);