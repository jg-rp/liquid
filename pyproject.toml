[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [{ name = "James Prior", email = "jamesgr.prior@gmail.com" }]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
dependencies = [
  "python-dateutil>=2.8.1",
  "typing-extensions>=4.2.0",
  "importlib-resources>=5.10.0",
]
description = "A Python engine for the Liquid template language."
dynamic = ["version"]
license = "MIT"
name = "python-liquid"
readme = "README.md"
requires-python = ">=3.7"

[project.optional-dependencies]
autoescape = ["MarkupSafe>=2,<3"]

[project.urls]
"Change Log" = "https://github.com/jg-rp/liquid/blob/main/CHANGES.md"
Documentation = "https://jg-rp.github.io/liquid/"
Homepage = "https://jg-rp.github.io/liquid/"
"Issue Tracker" = "https://github.com/jg-rp/liquid/issues"
"Source Code" = "https://github.com/jg-rp/liquid"

[tool.hatch.version]
path = "liquid/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = ["/**/.mypy_cache/"]
packages = ["liquid"]

[tool.hatch.build.targets.wheel]
exclude = ["/**/.mypy_cache/"]
packages = ["liquid"]

[tool.hatch.envs.default]
dependencies = [
  "pytest",
  "pytest-cov",
  "black",
  "mypy",
  "pyyaml",
  "types-pyyaml",
  "twine",
  "ruff",
  "mock",
  "types-python-dateutil",
  "MarkupSafe>=2, < 3",
]

[tool.hatch.envs.default.scripts]
benchmark = "python -O scripts/performance.py"
cov = [
  "hatch run noescape:cov",
  "pytest --cov-append --cov-report= --cov-fail-under=97 --cov-config=pyproject.toml --cov=liquid --cov=tests {args}",
]
cov-html = [
  "hatch run noescape:cov",
  "pytest --cov-append --cov-report=html --cov-config=pyproject.toml --cov=liquid --cov=tests {args}",
]
lint = "ruff check ."
no-cov = "cov --no-cov {args}"
profile = "python -O scripts/performance.py --profile"
test = "pytest {args}"
typing = "mypy"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311", "312", "pypy38", "pypy39"]

[tool.hatch.envs.test.scripts]
test = "pytest {args}"

[tool.hatch.envs.noescape]
dependencies = ["pytest", "pytest-cov", "mock"]
features = []
template = "noescape"

[tool.hatch.envs.noescape.scripts]
cov = "pytest --cov-report= --cov-config=pyproject.toml --cov=liquid --cov=tests {args}"
test = "pytest {args}"

[tool.hatch.envs.docs]
dependencies = ["black", "mkdocs", "mkdocstrings[python]", "mkdocs-material"]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.coverage.run]
branch = true
omit = ["tests/mocks/**/*", "liquid/__about__.py"]
parallel = true

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.mypy]
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
files = "liquid"
local_partial_types = true
no_implicit_optional = true
no_implicit_reexport = true
python_version = "3.10"
strict = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = false

[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]

# Same as Black.
line-length = 88

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"liquid/__about__.py" = ["D100"]
"liquid/__init__.py" = ["D104", "I001"]
"liquid/builtin/filters/__init__.py" = ["D104", "I001"]
"liquid/builtin/loaders/__init__.py" = ["D104", "I001"]
"liquid/builtin/tags/__init__.py" = ["D104", "I001"]
"scripts/__init__.py" = ["D104", "I001"]
"tests/*" = ["D100", "D101", "D104", "D103", "D102", "D209", "D205", "SIM117"]

[tool.ruff.lint]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

select = [
  "A",
  "ARG",
  "B",
  "BLE",
  "C4",
  "D",
  "E",
  "F",
  "I",
  "ICN",
  "ISC",
  "N",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RSE",
  "S",
  "SIM",
  "SLF",
  "T10",
  "T20",
  "TCH",
  "YTT",
]

# TODO: review ignores
ignore = [
  "S105",
  "S101",
  "D107",
  "D105",
  "PLR0913",
  "D401",
  "N818",
  "PT009",
  "B905",
  "PT027",
]

fixable = ["I", "SIM", "D202"]
unfixable = []
