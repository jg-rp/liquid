[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "python-liquid"
dynamic = ["version"]
description = "A Python engine for the Liquid template language."
readme = "README.md"
license = "MIT"
requires-python = ">=3.7"
authors = [{ name = "James Prior", email = "jamesgr.prior@gmail.com" }]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = ["python-dateutil>=2.8.1", "typing-extensions>=4.2.0"]

[project.optional-dependencies]
autoescape = ["MarkupSafe>=2.0.0"]

[project.urls]
"Change Log" = "https://github.com/jg-rp/liquid/blob/main/CHANGES.md"
Documentation = "https://jg-rp.github.io/liquid/"
Homepage = "https://jg-rp.github.io/liquid/"
"Issue Tracker" = "https://github.com/jg-rp/liquid/issues"
"Source Code" = "https://github.com/jg-rp/liquid"

[tool.hatch.version]
path = "liquid/__init__.py"

[tool.hatch.build.targets.sdist]
packages = ["liquid"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.build.targets.wheel]
packages = ["liquid"]
exclude = ["/**/.mypy_cache/"]

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "black",
    "mypy",
    "pyyaml",
    "types-pyyaml",
    "twine",
    "ruff",
    "mock",
    "types-python-dateutil",
    "MarkupSafe",
]

[tool.hatch.envs.default.scripts]
cov = [
    "hatch run noescape:cov",
    "pytest --cov-append --cov-report= --cov-fail-under=97 --cov-config=pyproject.toml --cov=liquid --cov=tests {args}",
]
cov-html = [
    "hatch run noescape:cov",
    "pytest --cov-append --cov-report=html --cov-config=pyproject.toml --cov=liquid --cov=tests {args}",
]
no-cov = "cov --no-cov {args}"
test = "pytest {args}"
lint = "ruff check ."
typing = "mypy"
benchmark = "python -O scripts/performance.py"
profile = "python -O scripts/performance.py --profile"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311", "pypy38", "pypy39"]

[tool.hatch.envs.test.scripts]
test = "pytest {args}"


[tool.hatch.envs.noescape]
template = "noescape"
features = []
dependencies = ["pytest", "pytest-cov", "mock"]

[tool.hatch.envs.noescape.scripts]
cov = "pytest --cov-report= --cov-config=pyproject.toml --cov=liquid --cov=tests {args}"
test = "pytest {args}"

[tool.hatch.envs.docs]
dependencies = ["black", "mkdocs", "mkdocstrings[python]", "mkdocs-material"]

[tool.hatch.envs.docs.scripts]
build = "mkdocs build --clean --strict"
serve = "mkdocs serve --dev-addr localhost:8000"

[tool.coverage.run]
branch = true
parallel = true
omit = ["tests/mocks/**/*", "liquid/__about__.py"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]


[tool.mypy]
files = "liquid"
python_version = "3.10"
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
no_implicit_optional = true
local_partial_types = true
no_implicit_reexport = true
strict = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unused_ignores = false
warn_return_any = true
warn_unreachable = true

[tool.ruff]
select = [
    "A",
    "ARG",
    "B",
    "BLE",
    "C4",
    "D",
    "E",
    "F",
    "I",
    "ICN",
    "ISC",
    "N",
    "PIE",
    "PL",
    "PT",
    "Q",
    "RET",
    "RSE",
    "S",
    "SIM",
    "SLF",
    "T10",
    "T20",
    "TCH",
    "YTT",
]
# TODO: review ignores
ignore = [
    "S105",
    "S101",
    "D107",
    "D105",
    "PLR0913",
    "D401",
    "N818",
    "PT009",
    "B905",
    "PT027",
]

fixable = ["I", "SIM", "D202"]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 88

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.isort]
force-single-line = true

[tool.ruff.pydocstyle]
convention = "google"


[tool.ruff.per-file-ignores]
"liquid/__about__.py" = ["D100"]
"liquid/__init__.py" = ["D104", "I001"]
"liquid/builtin/filters/__init__.py" = ["D104", "I001"]
"liquid/builtin/loaders/__init__.py" = ["D104", "I001"]
"liquid/builtin/tags/__init__.py" = ["D104", "I001"]
"tests/*" = ["D100", "D101", "D104", "D103", "D102", "D209", "D205", "SIM117"]
"scripts/__init__.py" = ["D104", "I001"]
